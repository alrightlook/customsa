#ifndef __READNPCTEMPLATE_H__
#define __READNPCTEMPLATE_H__

#include "util.h"
#include "char_base.h"

#define NPC_TEMPLATEFILEMAGIC   "NPCTEMPLATE\n"

#undef EXTERN
#ifdef __NPCTEMPLATE__
#define EXTERN
#else
#define EXTERN extern
#endif


typedef struct tagNPC_haveItem {
  int itemnumber;
  int haverate;
  int havenum;
} NPC_haveItem;

typedef enum {
  NPC_TEMPLATENAME,
  NPC_TEMPLATECHARNAME,

  NPC_TEMPLATEINITFUNC,
  NPC_TEMPLATEWALKPREFUNC,
  NPC_TEMPLATEWALKPOSTFUNC,
  NPC_TEMPLATEPREOVERFUNC,
  NPC_TEMPLATEPOSTOVERFUNC,
  NPC_TEMPLATEWATCHFUNC,
  NPC_TEMPLATELOOPFUNC,
  NPC_TEMPLATEDYINGFUNC,
  NPC_TEMPLATETALKEDFUNC,

  NPC_TEMPLATEPREATTACKEDFUNC,
  NPC_TEMPLATEPOSTATTACKEDFUNC,

  NPC_TEMPLATEOFFFUNC,
  NPC_TEMPLATELOOKEDFUNC,
  NPC_TEMPLATEITEMPUTFUNC,

  NPC_TEMPLATESPECIALTALKEDFUNC,
  NPC_TEMPLATEWINDOWTALKEDFUNC,
#ifdef _USER_CHARLOOPS
  NPC_TEMPLATELOOPFUNCTEMP1,
  NPC_TEMPLATELOOPFUNCTEMP2,
  NPC_TEMPLATEBATTLEPROPERTY,
#endif
  NPC_TEMPLATECHARNUM,
} NPC_TEMPLATECHAR;

typedef enum {
  NPC_TEMPLATEMAKEATNOBODY,
  NPC_TEMPLATEMAKEATNOSEE,
  NPC_TEMPLATEIMAGENUMBER,
  NPC_TEMPLATETYPE,
  NPC_TEMPLATEMINHP,
  NPC_TEMPLATEMINMP,
  NPC_TEMPLATEMINSTR,
  NPC_TEMPLATEMINTOUGH,
  NPC_TEMPLATEISFLYING,
  NPC_TEMPLATEITEMNUM,
  NPC_TEMPLATELOOPFUNCTIME,
  NPC_TEMPLATEFUNCTIONINDEX,
  NPC_TEMPLATEINTNUM,
} NPC_TEMPLATEINT;

typedef struct tagNPC_Template {
  STRING64 chardata[NPC_TEMPLATECHARNUM];
  int intdata[NPC_TEMPLATEINTNUM];
  int randomdata[NPC_TEMPLATEINTNUM];
  int hash;
  NPC_haveItem *haveitem;
} NPC_Template;


EXTERN NPC_Template *NPC_template;
EXTERN int NPC_templatenum;
EXTERN int NPC_template_readindex;

int NPC_CHECKTEMPLATEINDEX(int index);

int NPC_copyFunctionSetToChar(int id, Char *ch);

int NPC_readNPCTemplateFiles(char *topdirectory, int templatesize);

int NPC_templateGetTemplateIndex(char *templatename);

#endif
